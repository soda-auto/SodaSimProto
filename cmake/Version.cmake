if(NOT GIT)
  find_program(GIT git)
endif()

if(NOT PROJECT_VERSION)
  execute_process(COMMAND ${GIT} describe --tags --abbrev=0
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    OUTPUT_VARIABLE PROJECT_VERSION
    OUTPUT_STRIP_TRAILING_WHITESPACE
  )
  if(NOT PROJECT_VERSION)
    set(PROJECT_VERSION 0.0.1.0)
  endif()
endif()

string(REPLACE "." ";" VERSION_COMPONENTS ${PROJECT_VERSION})
list(LENGTH VERSION_COMPONENTS VERSION_COMPONENTS_COUNT)
if(NOT EXPECTED_VERSION_COMPONENTS_COUNT)
  set(EXPECTED_VERSION_COMPONENTS_COUNT 4)
endif()
if(NOT VERSION_COMPONENTS_COUNT EQUAL EXPECTED_VERSION_COMPONENTS_COUNT)
  message(SEND_ERROR
    "There should be ${EXPECTED_VERSION_COMPONENTS_COUNT} components \
    separated by dot in version: ${PROJECT_VERSION}")
endif()
if(EXPECTED_VERSION_COMPONENTS_COUNT EQUAL 4)
  list(GET VERSION_COMPONENTS 0 PROJECT_VERSION_EPOCH)
  list(GET VERSION_COMPONENTS 1 PROJECT_VERSION_MAJOR)
  list(GET VERSION_COMPONENTS 2 PROJECT_VERSION_MINOR)
  list(GET VERSION_COMPONENTS 3 PROJECT_VERSION_PATCH)
else()
  list(GET VERSION_COMPONENTS 0 PROJECT_VERSION_MAJOR)
  list(GET VERSION_COMPONENTS 1 PROJECT_VERSION_MINOR)
  if(EXPECTED_VERSION_COMPONENTS_COUNT EQUAL 3)
    list(GET VERSION_COMPONENTS 2 PROJECT_VERSION_PATCH)
  else()
    set(PROJECT_VERSION_PATCH 0)
  endif()
endif()

if(NOT BUILD_NUMBER)
  set(BUILD_NUMBER "custom")
endif()
set(PROJECT_VERSION_TWEAK ${BUILD_NUMBER})

if(NOT BUILD_NUMBER STREQUAL "custom" AND NOT COMMIT_HASH)
  execute_process(
    COMMAND ${GIT} rev-parse --short HEAD
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    OUTPUT_VARIABLE COMMIT_HASH
    OUTPUT_STRIP_TRAILING_WHITESPACE
  )
endif()
if(NOT COMMIT_HASH)
  set(COMMIT_HASH "nohash")
endif()

set(FULL_PACKAGE_VERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.${PROJECT_VERSION_TWEAK}-${COMMIT_HASH})
if(EXPECTED_VERSION_COMPONENTS_COUNT EQUAL 4)
  set(FULL_PACKAGE_VERSION "${PROJECT_VERSION_EPOCH}.${FULL_PACKAGE_VERSION}")
endif()

execute_process(COMMAND lsb_release -r
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  OUTPUT_VARIABLE OS_RELEASE
  OUTPUT_STRIP_TRAILING_WHITESPACE
)
string(REGEX REPLACE "^.+:[ \t\r\n]+" "" OS_RELEASE "${OS_RELEASE}")

if(OS_RELEASE STREQUAL "18.04")
  string(REPLACE "." "" OS_STR ${OS_RELEASE})
  set(FULL_PACKAGE_VERSION "${FULL_PACKAGE_VERSION}-ubuntu${OS_STR}")
endif()

